<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Cogito ergo sum</title>
    <link>https://chrismade.github.io/blog/</link>
    <description>Recent content in Blogs on Cogito ergo sum</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Chris Ma</copyright>
    <lastBuildDate>Mon, 13 Aug 2018 22:42:50 +0200</lastBuildDate>
    
	<atom:link href="https://chrismade.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>understanding the drivers behind agile - and a warning</title>
      <link>https://chrismade.github.io/blog/understanding-the-drivers-behind-agile-and-a-warning/</link>
      <pubDate>Mon, 13 Aug 2018 22:42:50 +0200</pubDate>
      
      <guid>https://chrismade.github.io/blog/understanding-the-drivers-behind-agile-and-a-warning/</guid>
      <description>agile projects are trendy - however, there was a missing piece - at least for me. When I learnt about &amp;quot;agile&amp;quot; and why this is better in some cases compared to traditional project management I heart the phrase &amp;quot;autonomy, mastery and purpose&amp;quot; a lot but I could see any context. If you felt the same - here comes the solution.
A word of warning - may violate my data privacy policy Writing these blog postings I will also test the features of this system (netlify) - and on this post I will try the youtube widget - no knowing how exactly it is implemented.</description>
    </item>
    
    <item>
      <title>my serverless blog is now life</title>
      <link>https://chrismade.github.io/blog/my-own-netlify-is-now-life/</link>
      <pubDate>Sat, 11 Aug 2018 08:51:31 +0200</pubDate>
      
      <guid>https://chrismade.github.io/blog/my-own-netlify-is-now-life/</guid>
      <description>following the instructions on https://www.control-alt-del.org/post/serverless-blog-howto/ and fixing an issue in the config.yml the serverless blog is now life.
The CMS Back-End The CMS backend with workflow and edit functions resides in three files:
 A single javascript file which incorporates every functionality which is needed
 A single configuration file config.yml which keeps all config data that is needed by the javascript CMS
 A single HTML which invokes the javascript file and which could also add custom widgets to extend the base functionality, e.</description>
    </item>
    
  </channel>
</rss>